:-include("tda-chatbot").

my_car([A|_],A).

verificarChatbots([],[]).

verificarChatbots([A|B],[A|R]):-
    getcode(A,A1),
    revisar(A1,B,L2),
    verificarChatbots(L2,R).

getNameSystem([A|_],A1):-
    my_car(A,A1).

getInitialChatbotCodelink([_,B|_],B1):-
    my_car(B,B1).

getChatbotsSystem([_,_,C|_],C).

getUserList([_,_,_,D|_],D).

getLoginId([_,_,_,_,E],E1):-
    my_car(E,E1).

systemAddChatbots([Name,Codelink,Chatbots|S1],Chatbot,S):-
    my_append([Chatbot],Chatbots,L2),
    verificarChatbots(L2,LR),
    S2 = [Name,Codelink,LR],
    my_append(S2,S1,S).

%----------------User-----------------%
getIdUser([A|_],A).

getfirstUser([A|_],A).

revisarIdUser(_,L,L):-
    L = [].

revisarIdUser(Id,[A|B],[A|R]):-
    getcode(A,A1),
    string(A1),
    not(Id = A1),
    revisarIdUser(code, B, R),
    !.

revisarIdUser(Id,[_|B],LR):-
    revisarIdUser(Id,B,LR).

verificarIdUser([A|B],[A|R]):-
    getIdUser(A,A1),
    string(A1),
    revisarIdUser(A1,B,L2),
    verificarIdUser(L2,R).

revisarSituacion([_|B]):-   %Funcion que revisa que no haya un usuario logeado
    B is [].

revisarSituacion2([A|B],LR):-        %Funcion que revisa que haya un usuario logeado para deslogearlo
    my_car(B,B1),
    string(B1),
    LR = [A].

revisarLogin([_,_,_|D]):-
   not(D is []),
   revisarSituacion(D).

%---------------------------------------%

agregarUser([A|_],User,[User]):-  % situacion donde se agrega un user por primera vez
    A is [].

agregarUser([A|B],User,LR):-      % situacion donde se agrega un user a una lista de user previamente registrados
    string(A),
    my_append([A|B],[User],L2),
    verificarIdUser(L2,LR).

agregarUSer([A|B],User,LR):-      % situacion donde se agrega un user, cuando ya hay un user logeado
    not(string(A)),
    not(A is []),
    my_append(A,[User],L2), %L2 es la lista con el usuario agregado
    verificarIdUser(L2,L3),
    LR = [L3,B].     %LR es la lista que contiene a la lista de usuarios y el user logeado



systemAddUser([A,B,C|D],User,SR):-

    agregarUser(D,User,LR),  %funcion que agrega el usuario a la lista de usuario tomando en cuenta las situaciones y cumpliendo con la unicidad de users
    Temp=[A,B,C],
    my_append(Temp,LR,SR).

systemLogin(System,User,S2):-
    revisarLogin(System),
    my_append(system,[User],S2).

systemLogout([A,B,C|D],S):-
    S1=[A,B,C],
    revisarSituacion2(D,D2),
    my_append(S1,D2,S).


system(Name, InitialChatbotCodelink,Chatbots,System):-
    verificarChatbots(Chatbots,LR),
    System =[Name,InitialChatbotCodelink,LR].


