:-include("tda-chatbot").

my_car([A|_],A).
my_cdr([_|B],B).

verificarChatbots([],[]).

verificarChatbots([A|B],[A|R]):-
    getcode(A,A1),
    revisar(A1,B,L2),
    verificarChatbots(L2,R).

getNameSystem([A|_],A1):-
    my_car(A,A1).

getInitialChatbotCodelink([_,B|_],B1):-
    my_car(B,B1).

getChatbotsSystem([_,_,C|_],C).

getUserList([_,_,_,D|_],D).

getLoginId([_,_,_,_,E],E1):-
    my_car(E,E1).

systemAddChatbot([Name,Codelink,Chatbots|S1],Chatbot,S):-
    my_append([Chatbot],Chatbots,L2),
    verificarChatbots(L2,LR),
    S2 = [Name,Codelink,LR],
    my_append(S2,S1,S).

%----------------User-----------------%
getIdUser([A|_],A).

getfirstUser([A|_],A).

revisarIdUser(_,[],[]).

revisarIdUser(Id,[A|B],[A|R]):-
    string(A),
    not(Id = A),
    revisarIdUser(code, B, R),
    !.

revisarIdUser(Id,[_|B],LR):-
    revisarIdUser(Id,B,LR).

verificarIdUser([],[]).

verificarIdUser([A|B],[A|R]):-
    string(A),
    revisarIdUser(A,B,L2),
    verificarIdUser(L2,R).

revisarSituacion([_|B]):-   %Funcion que revisa que no haya un usuario logeado
    B = [].

revisarSituacion2([A|B],LR):-        %Funcion que revisa que haya un usuario logeado para deslogearlo
    not(B = []),
    LR = A.

revisarLogin([_,_,_|D]):-
   not(D = []),
   revisarSituacion(D).

existe([],_):-!.

existe([A|_],User):-
    A = User.
existe([_|B],User):-
    existe(B,User).

buscarUser([_,_,_|D],User):-
    not(D=[]),
    my_cdr(D,D1),
    D1 = [],
    existe(D,User).

buscarUser([_,_,_|D],User):-
    not(D=[]),
    my_cdr(D,D1),
    not(D1 = []),
    my_car(D,D2),
    existe(D2,User).

%---------------------------------------%

agregarUser([],User,[User]).   % situacion donde se agrega un user por primera


agregarUser([A|B],User,LR):-      % situacion donde se agrega un user a una lista de user previamente registrados,
    B =[],
    my_append(A,[User],L2),
    verificarIdUser(L2,L3),
    LR = L3.

agregarUser([A|B],User,LR):-      % situacion donde se agrega un user a una lista de user previamente registrados,
    not(B =[]),
    my_append(A,[User],L2),
    verificarIdUser(L2,L3),
    LR = [L3|B].



systemAddUser([A,B,C|D],User,SR):-
    agregarUser(D,User,LR),  %funcion que agrega el usuario a la lista de usuario tomando en cuenta las situaciones y cumpliendo con la unicidad de users
    SR=[A,B,C,LR].



systemLogin(System,User,S2):-
    revisarLogin(System),
    buscarUser(System,User),
    S2=[System,User].

systemLogout([A,B,C|D],S):-   %D es [[Users],UserLog].
    revisarSituacion2(D,D2), % entrega lista de solo usuarios registrados
    S=[A,B,C,D2].


system(Name, InitialChatbotCodelink,Chatbots,System):-
    verificarChatbots(Chatbots,LR),
    System =[Name,InitialChatbotCodelink,LR].

